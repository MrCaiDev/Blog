---
import type { GetStaticPaths } from "astro";
import Calendar from "components/icons/Calendar";
import Tag from "components/icons/Tag";
import PostLayout from "layouts/PostLayout.astro";
import { getFormattedDate, getIsoDate } from "utils/date";
import { parseMarkdown } from "utils/markdown";
import { fetchPostBySlug } from "utils/post/fetchPostBySlug";
import { fetchSlugs } from "utils/post/fetchSlugs";

export const getStaticPaths: GetStaticPaths = async () => {
  const slugs = await fetchSlugs();
  return slugs.map((slug) => ({ params: { slug } }));
};

const { slug } = Astro.params as { slug: string };
const { content, ...meta } = await fetchPostBySlug(+slug);
const html = parseMarkdown(content);
const isUpdated = meta.updatedAt !== meta.publishedAt;
const publishedAtIso = getIsoDate(meta.publishedAt);
const publishedAtText = getFormattedDate(meta.publishedAt);
const updatedAtIso = getIsoDate(meta.updatedAt);
const updatedAtText = getFormattedDate(meta.updatedAt);
---

<PostLayout {...meta}>
  <main class="max-w-5xl min-h-screen px-8 py-20 mx-auto">
    <section
      class="space-y-2 mb-8 text-sm md:text-base text-gray-11 dark:text-graydark-11"
    >
      <time datetime={publishedAtIso} class="flex items-center gap-2">
        <Calendar size={20} />
        Published at: {publishedAtText}
      </time>
      {
        isUpdated && (
          <time datetime={updatedAtIso} class="flex items-center gap-2">
            <Calendar size={20} />
            Updated at: {updatedAtText}
          </time>
        )
      }
      <div class="flex items-center gap-2">
        <Tag size={20} />
        Tags:
        <ul class="flex gap-2">
          {
            meta.tags.map((tag) => (
              <li>
                <a
                  href={`/tags/${tag}/1`}
                  class="hover:text-cyan-11 dark:hover:text-cyandark-11"
                >
                  {tag}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </section>
    <article class="max-w-none typography">
      <h1 class="text-3xl md:text-4xl">{meta.title}</h1>
      <Fragment set:html={html} />
    </article>
    <hr class="my-8 border-gray-6 dark:border-graydark-6" />
    <!-- Add media sharing -->
  </main>
</PostLayout>
