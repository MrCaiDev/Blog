---
import { getFormattedDate, getIsoDate } from "utils/date";
import { toKebabCase } from "utils/misc";

export type Props = PostSummary & { ghost?: boolean };
const {
  slug,
  title,
  description,
  publishedAt,
  tags,
  ghost = false,
} = Astro.props;

const publishedAtIso = getIsoDate(publishedAt);
const publishedAtText = getFormattedDate(publishedAt);
---

<div
  class:list={[
    "group flex flex-col gap-2 relative w-full h-full px-6 py-4 md:px-7 md:py-5 rounded-lg hover:bg-gray-4 dark:hover:bg-graydark-4 active:bg-gray-5 dark:active:bg-graydark-5",
    !ghost && "shadow bg-gray-3 dark:bg-graydark-3",
  ]}
>
  <time
    datetime={publishedAtIso}
    class:list={[
      "text-gray-11 dark:text-graydark-11",
      ghost ? "text-sm md:text-base" : "text-xs md:text-sm",
    ]}
  >
    {publishedAtText}
  </time>
  <h3
    class:list={[
      "font-bold line-clamp-2",
      ghost ? "text-xl md:text-2xl" : "text-lg md:text-xl",
    ]}
  >
    <a href={"/p/" + slug}>
      {title}
      <span class="absolute top-0 left-0 right-0 bottom-0"></span>
    </a>
  </h3>
  <p
    class="text-sm md:text-base text-gray-11 dark:text-graydark-11 group-hover:text-gray-12 dark:group-hover:text-graydark-12 line-clamp-3"
  >
    {description}
  </p>
  <ul class="flex gap-x-2 mt-auto">
    {
      tags.map((tag) => (
        <li class="z-10">
          <a
            href={"/tags/" + toKebabCase(tag)}
            class="text-sm md:text-base italic text-gray-11 dark:text-graydark-11 hover:text-cyan-11 dark:hover:text-cyandark-11"
          >
            #{tag}
          </a>
        </li>
      ))
    }
  </ul>
</div>
